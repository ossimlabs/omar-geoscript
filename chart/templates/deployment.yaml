apiVersion: apps/v1
kind: Deployment
metadata:
  labels: {}
  name: {{ .Values.appName }}
spec:
  {{- if eq (include "omar-geoscript.autoscaling.enabled" $) "false" }}
  replicas: {{ .Values.replicas }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ .Values.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}
    spec:
      initContainers:
      {{- if .Values.extraInitContainers }}
      {{- toYaml .Values.extraInitContainers | nindent 6 }}
      {{- end }}
      containers:
      {{- if .Values.sideCars }}
      {{- toYaml .Values.sideCars | nindent 6 }}
      {{- end }}
      - name:  {{ .Values.appName }}
        env:
        {{- include "omar-geoscript.envVars" . | nindent 8 }}
        image: {{ include "helm-base.image" . | quote }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        livenessProbe:
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          tcpSocket:
            port: {{ .Values.internalPort }}
        readinessProbe:
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          httpGet:
            path: {{ .Values.readinessProbe.path }}
            port: {{ .Values.internalPort }}
            scheme: HTTP
        ports:
        - containerPort: {{ .Values.internalPort }}
          protocol: TCP
        - containerPort: 5005
          protocol: TCP
        resources:
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
        terminationMessagePath: /dev/termination-log
        volumeMounts:
        {{- include "omar-geoscript.volumeMounts" . | indent 8 }}
      dnsPolicy: ClusterFirst
      {{- if .Values.global.useImagePullSecret }}
      imagePullSecrets:
        - name: {{ .Values.appName }}-pull-secret
      {{- end }}
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- include "omar-geoscript.volumes" . | indent 6 }}
